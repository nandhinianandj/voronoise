% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/entities.R
\name{entitytype}
\alias{entitytype}
\alias{entity_circle}
\alias{entity_line}
\alias{entity_heart}
\alias{entity_droplet}
\alias{entity_lissajous}
\alias{entity_gaussian}
\alias{entity_null}
\alias{entity_beta}
\alias{entity_cauchy}
\alias{entity_hypergeometric}
\alias{entity_weibull}
\title{Entity types}
\usage{
entity_circle(seed = use_seed(1), grain = 50, id = NULL, ...)

entity_line(seed = use_seed(1), grain = 50, id = NULL, ...)

entity_heart(seed = use_seed(1), grain = 50, id = NULL, ...)

entity_droplet(seed = use_seed(1), grain = 50, id = NULL, shape = 3, ...)

entity_lissajous(
  seed = use_seed(1),
  grain = 500,
  id = NULL,
  start = 0,
  end = 30,
  shape = list(a = 1, b = 1, w = 0.3, d = 1),
  ...
)

entity_gaussian(seed = use_seed(1), grain = 50, id = NULL, ...)

entity_null(seed = use_seed(1), ...)

entity_beta(
  seed = use_seed(1),
  grain = 50,
  id = NULL,
  shape1 = 0.3,
  shape2 = 5,
  ...
)

entity_cauchy(
  seed = use_seed(1),
  grain = 50,
  id = NULL,
  location = 0,
  scale = 1,
  xmax = 1000,
  ymax = 800,
  ...
)

entity_hypergeometric(
  seed = use_seed(1),
  grain = 50,
  id = NULL,
  m = grain/2,
  n = grain/2,
  k = 2,
  xmax = 1000,
  ymax = 800,
  ...
)

entity_weibull(
  seed = use_seed(1),
  grain = 50,
  id = NULL,
  shape = 1,
  scale = 1,
  xmax = 1000,
  ymax = 800,
  ...
)
}
\arguments{
\item{seed}{Parameter specifying seed (default = NULL)}

\item{grain}{The number of points that comprise the entity}

\item{id}{A numeric identifier for the entity}

\item{...}{Parameters to be passed to locate_entity}

\item{shape}{Parameter controlling the shape of the entity (droplet, lissajous)}

\item{start}{Parameter controlling a start location for a line (lissajous)}

\item{end}{Parameter controlling an end location for a line (lissajous)}
}
\value{
A tibble with four columns: x, y, id and type
}
\description{
Entity types
}
\details{
Primitive entities in jasmines are tibbles with four columns: x and y specify
co-ordinate values, the id is a number identifying the object, and the type is
a character label indicating what kind of entity it is. By default, entities are
assigned a random integer as the id code, but it is often wise for the calling
function to assign the id in a more predictable fashion. The shape parameter can sometimes
be a list.
}
